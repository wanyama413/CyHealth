{"mappings":"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","sources":["App.js"],"sourcesContent":["class MyApp{\r\nUI(countries,statistics){\r\n//Display Country Flag\r\n\r\ncountries.map(country=>{\r\n//create a row everytime a country is generated\r\nconst tr =document.createElement('div')\r\ntr.className='tr'\r\ntr.classList.add('data-row')\r\nconst td2=document.createElement('div')\r\ntd2.classList.add('td')\r\nconst flag = new CountryFlag(td2);\r\nflag.selectByName(`${country}`)\r\ntr.appendChild(td2)\r\n//create country name\r\nconst td=document.createElement('div')\r\ntd.className='countries'\r\ntd.classList.add('td')\r\ntd.innerText=country\r\ntr.appendChild(td)\r\n//consume all statistics\r\nlet countryPopulation,cumulativeCases,newCases,cumulativeDeaths,newDeaths,criticalCases,testsConducted,totalTestsConducted\r\nstatistics.forEach(element=>{\r\n//countryPopulation\r\nconst {country:countryy,cases:{total,new:newCasess,critical},deaths:{new:newDeathss,total:totalDeaths},tests:{total:totalTests},cases}=element\r\n\r\n\r\nif(countryy==`${country}`){\r\ncountryPopulation=document.createElement('div')\r\ncountryPopulation.className='countries'\r\ncountryPopulation.classList.add('td')\r\ncountryPopulation.innerText=String(element.population).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n//cumulativeCases\r\ncumulativeCases=document.createElement('div')\r\ncumulativeCases.className='others'\r\ncumulativeCases.classList.add('td')\r\ncumulativeCases.innerText=String(total).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n//newCases\r\nnewCases=document.createElement('div')\r\nnewCases.className='others'\r\nnewCases.classList.add('td')\r\nif(String(newCasess)=='null'){\r\nnewCases.innerText='0'\r\n}else{\r\nnewCases.innerText=String(newCasess).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n}\r\n\r\n//cumulativeDeaths\r\ncumulativeDeaths=document.createElement('div')\r\ncumulativeDeaths.className='others'\r\ncumulativeDeaths.classList.add('td')\r\ncumulativeDeaths.innerText=String(totalDeaths).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n//new Deaths\r\nnewDeaths=document.createElement('div')\r\nnewDeaths.className='others'\r\nnewDeaths.classList.add('td')\r\nif(String(newDeathss)=='null'){\r\n    newDeaths.innerText='0'\r\n}else{\r\nnewDeaths.innerText=String(newDeathss).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n//criticalCases\r\ncriticalCases=document.createElement('div')\r\ncriticalCases.className='others'\r\ncriticalCases.classList.add('td')\r\ncriticalCases.classList.add('critical')\r\nif(String(critical)=='null'){\r\n    criticalCases.innerText='0'\r\n}else{\r\ncriticalCases.innerText=String(critical).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n//missing real data\r\n\r\ntestsConducted=document.createElement('div')\r\ntestsConducted.className='others'\r\ntestsConducted.classList.add('td')\r\ntestsConducted.innerText=String(cases[\"1M_pop\"]).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n//totaltestsConducted\r\ntotalTestsConducted=document.createElement('div')\r\ntotalTestsConducted.className='others'\r\ntotalTestsConducted.classList.add('td')\r\ntotalTestsConducted.innerText=String(totalTests).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n\r\n}\r\n\r\n})\r\n\r\ntr.appendChild(countryPopulation)\r\ntr.appendChild(cumulativeCases)\r\ntr.appendChild(newCases)\r\ntr.appendChild(cumulativeDeaths)\r\ntr.appendChild(newDeaths)\r\ntr.appendChild(criticalCases)\r\ntr.appendChild(testsConducted)\r\ntr.appendChild(totalTestsConducted)\r\ndocument.querySelector('.tbody').appendChild(tr)\r\n\r\n\r\n})\r\n\r\n\r\n}\r\nasync getStatistics(){\r\n    try{\r\n    const options = {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t\t'X-RapidAPI-Key': '83d7bb187fmshe360e3aa4157762p16a725jsn6fcd3b0db543',\r\n\t\t'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\r\n\t}\r\n};\r\n\r\nconst response = await fetch('https://covid-193.p.rapidapi.com/statistics', options)\r\nconst data= await response.json()\r\nconst statistics=data.response\r\nstatistics.map(n=>{\r\nconst {continent,population}=n\r\nreturn {continent,population}\r\n})\r\nreturn statistics    \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n\r\n}\r\nFilter(){\r\n\r\n let search=document.querySelector('#user').value\r\nconst capitalize = s => (s && s[0].toUpperCase() + s.slice(1)) || \"\"\r\n//parameters.push(search)\r\n \r\n  var input, filter, tbody, tr, td, i, txtValue;\r\n  tbody = document.querySelector(\".tbody\");\r\n  tr = tbody.querySelectorAll(\".tr\");\r\n\r\n// Loop through all table rows, and hide those who don't match the search query\r\nfor (i = 0; i < tr.length; i++) {\r\n    td = tr[i].querySelectorAll(\".countries\")[0];// 2 is for 3rd column\r\n    if (td) {\r\n        txtValue = td.textContent || td.innerText;\r\n        if (txtValue.indexOf(capitalize(search))>-1) {\r\n            tr[i].style.display = \"\";\r\n        } else {\r\n            tr[i].style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n  \r\n   \r\n \r\n}\r\n\r\n\r\n\r\nasync getCountries(){\r\n\r\ntry{\r\nconst options = {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t\t'X-RapidAPI-Key': '83d7bb187fmshe360e3aa4157762p16a725jsn6fcd3b0db543',\r\n\t\t'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\r\n\t}\r\n};\r\nconst response =await fetch('https://covid-193.p.rapidapi.com/countries', options)\r\nconst data=await response.json()\r\nconst{response:countries}=data\r\nreturn countries\r\n}catch(err){\r\n    console.log(err)\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//user-defined function to download CSV file  \r\ndownloadCSV(csv, filename) {  \r\n    var csvFile;  \r\n    var downloadLink;  \r\n     \r\n    //define the file type to text/csv  \r\n    csvFile = new Blob([csv], {type: 'text/csv'});  \r\n    downloadLink = document.createElement(\"a\");  \r\n    downloadLink.download = filename;  \r\n    downloadLink.href = window.URL.createObjectURL(csvFile);  \r\n    downloadLink.style.display = \"none\";  \r\n  \r\n    document.body.appendChild(downloadLink);  \r\n    downloadLink.click();  \r\n}  \r\n  \r\n//user-defined function to export the data to CSV file format  \r\nexportTableToCSV(filename) {  \r\n   //declare a JavaScript variable of array type  \r\n   var csv = [];  \r\n   var rows = document.querySelectorAll(\".data-row\"); \r\n  // rows.map(string => string === null ? '' : `\\\"${string}\\\"`);\r\n   //merge the whole data in tabular form   \r\n   for(var i=0; i<rows.length; i++) {  \r\n    var row = [], cols = rows[i].querySelectorAll(\".td,.th\");  \r\n    for( var j=0; j<cols.length; j++)  \r\n       row.push(cols[j].textContent)\r\nconsole.log(row)\r\nlet tits=row.map(string => string === null ? '' : `\\\"${string}\\\"`);\r\n    csv.push(tits);  \r\n   }   \r\n   //call the function to download the CSV file  \r\n   this.downloadCSV(csv.join(\"\\n\"), filename)\r\n}  \r\n\r\n  \r\n\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded',async ()=>{\r\n       let her = new MyApp\r\n\r\n  \r\n    const allCountries= await her.getCountries()\r\n    const allStatistcs=await her.getStatistics()\r\n   her.UI(allCountries,allStatistcs)    \r\n   let footerYear=document.querySelector('#year')\r\nlet current_date=new Date().getFullYear()\r\nfooterYear.textContent=current_date\r\nconsole.log(current_date)\r\n})\r\n\r\n document.querySelector('#search').addEventListener('keyup',async ()=>{\r\n let him=new MyApp\r\n\r\n  const allStatistcs=await him.getStatistics()\r\n him.Filter()\r\n    })\r\ndocument.querySelector('#link').addEventListener('click',()=>{\r\n    let her= new MyApp()\r\n    her.exportTableToCSV('covidData.csv');  \r\n})\r\ndocument.querySelector('#menubar').addEventListener('click',()=>{\r\n    let sidebar=document.querySelector('.sidebar')\r\n    sidebar.classList.toggle('check')\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CountryFlag {\r\n\r\n    /**\r\n     * @param {HTMLElement} parent\r\n     */\r\n    constructor (parent) {\r\n        const element = document.createElement(\"div\");\r\n        parent.appendChild(element);\r\n        this.element = element;\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    randomize() {\r\n        CountryFlag.lazyLoadCountryList();\r\n        const randomIndex = Math.floor(Math.random() * CountryFlag.countryList.length);\r\n        const country = CountryFlag.countryList[randomIndex];\r\n        return this.trySelectCountry(country);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} alpha2 the ISO alpha-2 code of the country to be selected\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    selectByAlpha2(alpha2) {\r\n        return this.selectByMapName(CountryFlag.IDX_ALPHA2, alpha2.toLowerCase());\r\n    }\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} myname the ISO alpha-2 code of the country to be selected\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    selectByName(myname) {\r\n        return this.selectByMapName(CountryFlag.IDX_NAME, myname);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} alpha3 the ISO alpha-2 code of the country to be selected\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    selectByAlpha3(alpha3) {\r\n        return this.selectByMapName(CountryFlag.IDX_ALPHA3, alpha3.toLowerCase());\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} tld the top-level domain of the country to be selected\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    selectByTopLevelDomain(tld) {\r\n        return this.selectByMapName(CountryFlag.IDX_TLD, tld.toLowerCase());\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {Number} isoNumeric the ISO numeric code of the country to be selected\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    selectByIsoNumeric(isoNumeric) {\r\n        return this.selectByMapName(CountryFlag.IDX_NUMERIC, isoNumeric);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} alpha2 the ISO alpha-2 code of the country to be fetched\r\n     * @return {CountryFlagInfo} an object with info about the country\r\n     */\r\n    static getCountryByAlpha2(alpha2) {\r\n        const country = CountryFlag.getCountryByMapName(CountryFlag.IDX_ALPHA2, alpha2);\r\n        return CountryFlag.makeCountryFlagInfo(country);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} alpha3 the ISO alpha-3 code of the country to be fetched\r\n     * @return {CountryFlagInfo} an object with info about the country\r\n     */\r\n    static getCountryByAlpha3(alpha3) {\r\n        const country = CountryFlag.getCountryByMapName(CountryFlag.IDX_ALPHA3, alpha3);\r\n        return CountryFlag.makeCountryFlagInfo(country);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {String} tld the ISO top-level domain code of the country to be fetched\r\n     * @return {CountryFlagInfo} an object with info about the country\r\n     */\r\n    static getCountryByTopLevelDomain(tld) {\r\n        const country = CountryFlag.getCountryByMapName(CountryFlag.IDX_TLD, tld);\r\n        return CountryFlag.makeCountryFlagInfo(country);\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * @param {Number} isoNumeric the ISO numeric code of the country to be selected\r\n     * @return {CountryFlagInfo} an object with info about the country\r\n     */\r\n    static getCountryByIsoNumeric(isoNumeric) {\r\n        const country = CountryFlag.getCountryByMapName(CountryFlag.IDX_NUMERIC, isoNumeric);\r\n        return CountryFlag.makeCountryFlagInfo(country);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @return {CountryFlagInfo}\r\n     */\r\n    static makeCountryFlagInfo(country) {\r\n        return /** @type {CountryFlagInfo} */ {\r\n            isoNumeric: country[CountryFlag.IDX_NUMERIC],\r\n            name: country[CountryFlag.IDX_NAME],\r\n            alpha2: country[CountryFlag.IDX_ALPHA2],\r\n            alpha3: country[CountryFlag.IDX_ALPHA3],\r\n            topLevelDomain: country[CountryFlag.IDX_TLD],\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    selectByMapName(keyIndex, code) {\r\n        const country = CountryFlag.getCountryByMapName(keyIndex, code);\r\n        return this.trySelectCountry(country);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {CountryFlagTuple} country\r\n     * @return {Number} the ISO numeric code of the selected country\r\n     */\r\n    trySelectCountry(country) {\r\n        if (country) {\r\n            this.element.setAttribute(\"class\", `flag flag-${country[CountryFlag.IDX_ALPHA2]}`);\r\n            return country[CountryFlag.IDX_NUMERIC];\r\n        } else {\r\n            this.element.setAttribute(\"class\", \"\");\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    static getCountryByMapName(keyIndex, code) {\r\n        const mapName = `map-${keyIndex}`;\r\n        CountryFlag.lazyLoadCountryMap(mapName, keyIndex);\r\n        return CountryFlag[mapName].get(code);\r\n    }\r\n\r\n    /** @private */\r\n    static lazyLoadCountryMap(mapName, keyIndex) {\r\n        CountryFlag.lazyLoadCountryList();\r\n        if (!CountryFlag[mapName]) {\r\n            CountryFlag[mapName] = new Map();\r\n            for (const country of CountryFlag.countryList) {\r\n                CountryFlag[mapName].set(country[keyIndex], country);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    static lazyLoadCountryList() {\r\n        if (!CountryFlag.countryList) {\r\n            CountryFlag.countryList = JSON.parse(CountryFlag.rawCountryList);\r\n        }\r\n    }\r\n}\r\n\r\n/* I wanted these below to be either static class members or a top-level module constants,\r\n   but I'm avoiding it for now to maximize browser compatibility */\r\n\r\nCountryFlag.IDX_NUMERIC = 0;\r\nCountryFlag.IDX_NAME = 1;\r\nCountryFlag.IDX_ALPHA2 = 2;\r\nCountryFlag.IDX_ALPHA3 = 3;\r\nCountryFlag.IDX_TLD = 4;\r\n\r\n/** @typedef {Array<Number, String, String, String, String>} CountryFlagTuple */\r\n/**\r\n * @typedef {Object} CountryFlagInfo\r\n * @property {Number} isoNumeric\r\n * @property {String} alpha2\r\n * @property {String} alpha3\r\n * @property {String} topLevelDomain\r\n * @property {String} name\r\n */\r\n\r\nCountryFlag.rawCountryList = '[[4,\"Afghanistan\",\"af\",\"afg\",\"af\"],[8,\"Albania\",\"al\",\"alb\",\"al\"],[12,\"Algeria\",\"dz\",\"dza\",\"dz\"],[16,\"American Samoa\",\"as\",\"asm\",\"as\"],[20,\"Andorra\",\"ad\",\"and\",\"ad\"],[24,\"Angola\",\"ao\",\"ago\",\"ao\"],[660,\"Anguilla\",\"ai\",\"aia\",\"ai\"],[10,\"Antarctica\",\"aq\",\"ata\",\"aq\"],[28,\"Antigua-and-Barbuda\",\"ag\",\"atg\",\"ag\"],[32,\"Argentina\",\"ar\",\"arg\",\"ar\"],[51,\"Armenia\",\"am\",\"arm\",\"am\"],[533,\"Aruba\",\"aw\",\"abw\",\"aw\"],[36,\"Australia\",\"au\",\"aus\",\"au\"],[40,\"Austria\",\"at\",\"aut\",\"at\"],[31,\"Azerbaijan\",\"az\",\"aze\",\"az\"],[44,\"Bahamas\",\"bs\",\"bhs\",\"bs\"],[48,\"Bahrain\",\"bh\",\"bhr\",\"bh\"],[50,\"Bangladesh\",\"bd\",\"bgd\",\"bd\"],[52,\"Barbados\",\"bb\",\"brb\",\"bb\"],[112,\"Belarus\",\"by\",\"blr\",\"by\"],[56,\"Belgium\",\"be\",\"bel\",\"be\"],[84,\"Belize\",\"bz\",\"blz\",\"bz\"],[204,\"Benin\",\"bj\",\"ben\",\"bj\"],[60,\"Bermuda\",\"bm\",\"bmu\",\"bm\"],[64,\"Bhutan\",\"bt\",\"btn\",\"bt\"],[68,\"Bolivia\",\"bo\",\"bol\",\"bo\"],[70,\"Bosnia-and-Herzegovina\",\"ba\",\"bih\",\"ba\"],[72,\"Botswana\",\"bw\",\"bwa\",\"bw\"],[76,\"Brazil\",\"br\",\"bra\",\"br\"],[86,\"British Indian Ocean Territory\",\"io\",\"iot\",\"io\"],[92,\"British-Virgin-Islands\",\"vg\",\"vgb\",\"vg\"],[96,\"Brunei\",\"bn\",\"brn\",\"bn\"],[100,\"Bulgaria\",\"bg\",\"bgr\",\"bg\"],[854,\"Burkina-Faso\",\"bf\",\"bfa\",\"bf\"],[108,\"Burundi\",\"bi\",\"bdi\",\"bi\"],[116,\"Cambodia\",\"kh\",\"khm\",\"kh\"],[120,\"Cameroon\",\"cm\",\"cmr\",\"cm\"],[124,\"Canada\",\"ca\",\"can\",\"ca\"],[132,\"Cabo-Verde\",\"cv\",\"cpv\",\"cv\"],[136,\"Cayman-Islands\",\"ky\",\"cym\",\"ky\"],[140,\"Central African Republic\",\"cf\",\"caf\",\"cf\"],[148,\"Chad\",\"td\",\"tcd\",\"td\"],[152,\"Chile\",\"cl\",\"chl\",\"cl\"],[156,\"China\",\"cn\",\"chn\",\"cn\"],[162,\"Christmas Island\",\"cx\",\"cxr\",\"cx\"],[166,\"Cocos Islands\",\"cc\",\"cck\",\"cc\"],[170,\"Colombia\",\"co\",\"col\",\"co\"],[174,\"Comoros\",\"km\",\"com\",\"km\"],[184,\"Cook-Islands\",\"ck\",\"cok\",\"ck\"],[188,\"Costa-Rica\",\"cr\",\"cri\",\"cr\"],[191,\"Croatia\",\"hr\",\"hrv\",\"hr\"],[192,\"Cuba\",\"cu\",\"cub\",\"cu\"],[531,\"Cura&ccedil;ao\",\"cw\",\"cuw\",\"cw\"],[196,\"Cyprus\",\"cy\",\"cyp\",\"cy\"],[203,\"Czechia\",\"cz\",\"cze\",\"cz\"],[180,\"Congo\",\"cd\",\"cod\",\"cd\"],[208,\"Denmark\",\"dk\",\"dnk\",\"dk\"],[262,\"Djibouti\",\"dj\",\"dji\",\"dj\"],[212,\"Dominica\",\"dm\",\"dma\",\"dm\"],[214,\"Dominican Republic\",\"do\",\"dom\",\"do\"],[626,\"East Timor\",\"tl\",\"tls\",\"tl\"],[218,\"Ecuador\",\"ec\",\"ecu\",\"ec\"],[818,\"Egypt\",\"eg\",\"egy\",\"eg\"],[222,\"El-Salvador\",\"sv\",\"slv\",\"sv\"],[226,\"Equatorial-Guinea\",\"gq\",\"gnq\",\"gq\"],[232,\"Eritrea\",\"er\",\"eri\",\"er\"],[233,\"Estonia\",\"ee\",\"est\",\"ee\"],[231,\"Ethiopia\",\"et\",\"eth\",\"et\"],[238,\"Falkland-Islands\",\"fk\",\"flk\",\"fk\"],[234,\"Faroe Islands\",\"fo\",\"fro\",\"fo\"],[242,\"Fiji\",\"fj\",\"fji\",\"fj\"],[246,\"Finland\",\"fi\",\"fin\",\"fi\"],[250,\"France\",\"fr\",\"fra\",\"fr\"],[258,\"French-Polynesia\",\"pf\",\"pyf\",\"pf\"],[266,\"Gabon\",\"ga\",\"gab\",\"ga\"],[270,\"Gambia\",\"gm\",\"gmb\",\"gm\"],[268,\"Georgia\",\"ge\",\"geo\",\"ge\"],[276,\"Germany\",\"de\",\"deu\",\"de\"],[288,\"Ghana\",\"gh\",\"gha\",\"gh\"],[292,\"Gibraltar\",\"gi\",\"gib\",\"gi\"],[300,\"Greece\",\"gr\",\"grc\",\"gr\"],[304,\"Greenland\",\"gl\",\"grl\",\"gl\"],[308,\"Grenada\",\"gd\",\"grd\",\"gd\"],[316,\"Guam\",\"gu\",\"gum\",\"gu\"],[320,\"Guatemala\",\"gt\",\"gtm\",\"gt\"],[831,\"Guernsey\",\"gg\",\"ggy\",\"gg\"],[324,\"Guinea\",\"gn\",\"gin\",\"gn\"],[624,\"Guinea-Bissau\",\"gw\",\"gnb\",\"gw\"],[328,\"Guyana\",\"gy\",\"guy\",\"gy\"],[332,\"Haiti\",\"ht\",\"hti\",\"ht\"],[340,\"Honduras\",\"hn\",\"hnd\",\"hn\"],[344,\"Hong-Kong\",\"hk\",\"hkg\",\"hk\"],[348,\"Hungary\",\"hu\",\"hun\",\"hu\"],[352,\"Iceland\",\"is\",\"isl\",\"is\"],[356,\"India\",\"in\",\"ind\",\"in\"],[360,\"Indonesia\",\"id\",\"idn\",\"id\"],[364,\"Iran\",\"ir\",\"irn\",\"ir\"],[368,\"Iraq\",\"iq\",\"irq\",\"iq\"],[372,\"Ireland\",\"ie\",\"irl\",\"ie\"],[833,\"Isle-of-Man\",\"im\",\"imn\",\"im\"],[376,\"Israel\",\"il\",\"isr\",\"il\"],[380,\"Italy\",\"it\",\"ita\",\"it\"],[384,\"Ivory-Coast\",\"ci\",\"civ\",\"ci\"],[388,\"Jamaica\",\"jm\",\"jam\",\"jm\"],[392,\"Japan\",\"jp\",\"jpn\",\"jp\"],[832,\"Jersey\",\"je\",\"jey\",\"je\"],[400,\"Jordan\",\"jo\",\"jor\",\"jo\"],[398,\"Kazakhstan\",\"kz\",\"kaz\",\"kz\"],[404,\"Kenya\",\"ke\",\"ken\",\"ke\"],[296,\"Kiribati\",\"ki\",\"kir\",\"ki\"],[0,\"Kosovo\",\"xk\",\"xkx\",\"\"],[414,\"Kuwait\",\"kw\",\"kwt\",\"kw\"],[417,\"Kyrgyzstan\",\"kg\",\"kgz\",\"kg\"],[418,\"Laos\",\"la\",\"lao\",\"la\"],[428,\"Latvia\",\"lv\",\"lva\",\"lv\"],[422,\"Lebanon\",\"lb\",\"lbn\",\"lb\"],[426,\"Lesotho\",\"ls\",\"lso\",\"ls\"],[430,\"Liberia\",\"lr\",\"lbr\",\"lr\"],[434,\"Libya\",\"ly\",\"lby\",\"ly\"],[438,\"Liechtenstein\",\"li\",\"lie\",\"li\"],[440,\"Lithuania\",\"lt\",\"ltu\",\"lt\"],[442,\"Luxembourg\",\"lu\",\"lux\",\"lu\"],[446,\"Macau\",\"mo\",\"mac\",\"mo\"],[807,\"North-Macedonia\",\"mk\",\"mkd\",\"mk\"],[450,\"Madagascar\",\"mg\",\"mdg\",\"mg\"],[454,\"Malawi\",\"mw\",\"mwi\",\"mw\"],[458,\"Malaysia\",\"my\",\"mys\",\"my\"],[462,\"Maldives\",\"mv\",\"mdv\",\"mv\"],[466,\"Mali\",\"ml\",\"mli\",\"ml\"],[470,\"Malta\",\"mt\",\"mlt\",\"mt\"],[584,\"Marshall-Islands\",\"mh\",\"mhl\",\"mh\"],[478,\"Mauritania\",\"mr\",\"mrt\",\"mr\"],[480,\"Mauritius\",\"mu\",\"mus\",\"mu\"],[175,\"Mayotte\",\"yt\",\"myt\",\"yt\"],[484,\"Mexico\",\"mx\",\"mex\",\"mx\"],[583,\"Micronesia\",\"fm\",\"fsm\",\"fm\"],[498,\"Moldova\",\"md\",\"mda\",\"md\"],[492,\"Monaco\",\"mc\",\"mco\",\"mc\"],[496,\"Mongolia\",\"mn\",\"mng\",\"mn\"],[499,\"Montenegro\",\"me\",\"mne\",\"me\"],[500,\"Montserrat\",\"ms\",\"msr\",\"ms\"],[504,\"Morocco\",\"ma\",\"mar\",\"ma\"],[508,\"Mozambique\",\"mz\",\"moz\",\"mz\"],[104,\"Myanmar\",\"mm\",\"mmr\",\"mm\"],[516,\"Namibia\",\"na\",\"nam\",\"na\"],[520,\"Nauru\",\"nr\",\"nru\",\"nr\"],[524,\"Nepal\",\"np\",\"npl\",\"np\"],[528,\"Netherlands\",\"nl\",\"nld\",\"nl\"],[530,\"Caribbean-Netherlands\",\"an\",\"ant\",\"an\"],[540,\"New-Caledonia\",\"nc\",\"ncl\",\"nc\"],[554,\"New-Zealand\",\"nz\",\"nzl\",\"nz\"],[558,\"Nicaragua\",\"ni\",\"nic\",\"ni\"],[562,\"Niger\",\"ne\",\"ner\",\"ne\"],[566,\"Nigeria\",\"ng\",\"nga\",\"ng\"],[570,\"Niue\",\"nu\",\"niu\",\"nu\"],[408,\"North-Korea\",\"kp\",\"prk\",\"kp\"],[580,\"Northern Mariana Islands\",\"mp\",\"mnp\",\"mp\"],[578,\"Norway\",\"no\",\"nor\",\"no\"],[512,\"Oman\",\"om\",\"omn\",\"om\"],[586,\"Pakistan\",\"pk\",\"pak\",\"pk\"],[585,\"Palau\",\"pw\",\"plw\",\"pw\"],[275,\"Palestine\",\"ps\",\"pse\",\"ps\"],[591,\"Panama\",\"pa\",\"pan\",\"pa\"],[598,\"Papua-New-Guinea\",\"pg\",\"png\",\"pg\"],[600,\"Paraguay\",\"py\",\"pry\",\"py\"],[604,\"Peru\",\"pe\",\"per\",\"pe\"],[608,\"Philippines\",\"ph\",\"phl\",\"ph\"],[612,\"Pitcairn\",\"pn\",\"pcn\",\"pn\"],[616,\"Poland\",\"pl\",\"pol\",\"pl\"],[620,\"Portugal\",\"pt\",\"prt\",\"pt\"],[630,\"Puerto-Rico\",\"pr\",\"pri\",\"pr\"],[634,\"Qatar\",\"qa\",\"qat\",\"qa\"],[178,\"DRC\",\"cg\",\"cog\",\"cg\"],[638,\"Reunion\",\"re\",\"reu\",\"re\"],[642,\"Romania\",\"ro\",\"rou\",\"ro\"],[643,\"Russia\",\"ru\",\"rus\",\"ru\"],[646,\"Rwanda\",\"rw\",\"rwa\",\"rw\"],[652,\"St-Barth\",\"bl\",\"blm\",\"gp\"],[654,\"Saint-Helena\",\"sh\",\"shn\",\"sh\"],[659,\"Saint-Kitts-and-Nevis\",\"kn\",\"kna\",\"kn\"],[662,\"Saint-Lucia\",\"lc\",\"lca\",\"lc\"],[663,\"Saint-Martin\",\"mf\",\"maf\",\"gp\"],[666,\"Saint-Pierre-and-Miquelon\",\"pm\",\"spm\",\"pm\"],[670,\"St-Vincent-Grenadines\",\"vc\",\"vct\",\"vc\"],[882,\"Samoa\",\"ws\",\"wsm\",\"ws\"],[674,\"San-Marino\",\"sm\",\"smr\",\"sm\"],[678,\"Sao-Tome-and-Principe\",\"st\",\"stp\",\"st\"],[682,\"Saudi-Arabia\",\"sa\",\"sau\",\"sa\"],[686,\"Senegal\",\"sn\",\"sen\",\"sn\"],[688,\"Serbia\",\"rs\",\"srb\",\"rs\"],[690,\"Seychelles\",\"sc\",\"syc\",\"sc\"],[694,\"Sierra-Leone\",\"sl\",\"sle\",\"sl\"],[702,\"Singapore\",\"sg\",\"sgp\",\"sg\"],[534,\"Sint-Maarten\",\"sx\",\"sxm\",\"sx\"],[703,\"Slovakia\",\"sk\",\"svk\",\"sk\"],[705,\"Slovenia\",\"si\",\"svn\",\"si\"],[90,\"Solomon-Islands\",\"sb\",\"slb\",\"sb\"],[706,\"Somalia\",\"so\",\"som\",\"so\"],[710,\"South-Africa\",\"za\",\"zaf\",\"za\"],[410,\"S-Korea\",\"kr\",\"kor\",\"kr\"],[728,\"South-Sudan\",\"ss\",\"ssd\",\"ss\"],[724,\"Spain\",\"es\",\"esp\",\"es\"],[144,\"Sri-Lanka\",\"lk\",\"lka\",\"lk\"],[729,\"Sudan\",\"sd\",\"sdn\",\"sd\"],[740,\"Suriname\",\"sr\",\"sur\",\"sr\"],[744,\"Svalbard and Jan Mayen\",\"sj\",\"sjm\",\"sj\"],[748,\"Eswatini\",\"sz\",\"swz\",\"sz\"],[752,\"Sweden\",\"se\",\"swe\",\"se\"],[756,\"Switzerland\",\"ch\",\"che\",\"ch\"],[760,\"Syria\",\"sy\",\"syr\",\"sy\"],[158,\"Taiwan\",\"tw\",\"twn\",\"tw\"],[762,\"Tajikistan\",\"tj\",\"tjk\",\"tj\"],[834,\"Tanzania\",\"tz\",\"tza\",\"tz\"],[764,\"Thailand\",\"th\",\"tha\",\"th\"],[768,\"Togo\",\"tg\",\"tgo\",\"tg\"],[772,\"Tokelau\",\"tk\",\"tkl\",\"tk\"],[776,\"Tonga\",\"to\",\"ton\",\"to\"],[780,\"Trinidad-and-Tobago\",\"tt\",\"tto\",\"tt\"],[788,\"Tunisia\",\"tn\",\"tun\",\"tn\"],[792,\"Turkey\",\"tr\",\"tur\",\"tr\"],[795,\"Turkmenistan\",\"tm\",\"tkm\",\"tm\"],[796,\"Turks-and-Caicos\",\"tc\",\"tca\",\"tc\"],[798,\"Tuvalu\",\"tv\",\"tuv\",\"tv\"],[850,\"US-Virgin-Islands\",\"vi\",\"vir\",\"vi\"],[800,\"Uganda\",\"ug\",\"uga\",\"ug\"],[804,\"Ukraine\",\"ua\",\"ukr\",\"ua\"],[784,\"UAE\",\"ae\",\"are\",\"ae\"],[826,\"UK\",\"gb\",\"gbr\",\"uk\"],[840,\"USA\",\"us\",\"usa\",\"us\"],[858,\"Uruguay\",\"uy\",\"ury\",\"uy\"],[860,\"Uzbekistan\",\"uz\",\"uzb\",\"uz\"],[548,\"Vanuatu\",\"vu\",\"vut\",\"vu\"],[336,\"Vatican-City\",\"va\",\"vat\",\"va\"],[862,\"Venezuela\",\"ve\",\"ven\",\"ve\"],[704,\"Vietnam\",\"vn\",\"vnm\",\"vn\"],[876,\"Wallis-and-Futuna\",\"wf\",\"wlf\",\"wf\"],[732,\"Western-Sahara\",\"eh\",\"esh\",\"eh\"],[887,\"Yemen\",\"ye\",\"yem\",\"ye\"],[894,\"Zambia\",\"zm\",\"zmb\",\"zm\"],[716,\"Zimbabwe\",\"zw\",\"zwe\",\"zw\"]]';\r\n"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}